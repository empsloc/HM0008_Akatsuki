// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid()) @map("_id")
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid()) @map("_id")
  name          String
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Post          Post[]
  Comment       Comment[]
}

model VerificationToken {
  identifier String   @id @map("_id")
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Club {
  id       String    @id @default(cuid()) @map("_id")
  shortForm     String    
  name    String
  aboutClub    String
  presidentName    String
  presidentDetails    String

  vicePresidentName    String
  vicePresidentDetails    String
  clubSpecialityHeading1   String
  clubSpecialityDetails1    String
   clubSpecialityHeading2   String
  clubSpecialityDetails2    String
   clubSpecialityHeading3   String
  clubSpecialityDetails3    String

  ongoingEventName    String
  ongoingEventTimelineHeading1   String
  ongoingEventTimelineDetails1 String
  ongoingEventTimelineHeading2   String
  ongoingEventTimelineDetails2 String
  ongoingEventTimelineHeading3   String
  ongoingEventTimelineDetails3 String
  ongoingEventTimelineHeading4   String
  ongoingEventTimelineDetails4 String
  ongoingEventTimelineHeading5   String
  ongoingEventTimelineDetails5 String
  image    String

 
  SubClubs SubClub[]
}

model SubClub {
  id      String  @id @default(cuid()) @map("_id")
  shortForm    String  
  subClubDetails   String
  subClubLink String
  clubId String
  club    Club    @relation(fields: [clubId], references: [id])
}

model Community {
  id       String @id @default(cuid()) @map("_id")
  name  String 
  tags Tag[]
  posts    Post[]
}

model Tag{
     id       String @id @default(cuid()) @map("_id")
     name String
     communityID String 
     community Community @relation(fields: [communityID], references: [id])
}

model Post {
  id          String     @id @default(cuid()) @map("_id")
    time DateTime @default(now())
   title       String
  details String
  subHeading1       String?
  subDetails1       String?
  likesNo       Int @default(0)
  commentNos  Int @default(0)
  userEmail   String
  comments    Comment[]
  
  user        User       @relation(fields: [userEmail], references: [email])
  Community   Community? @relation(fields: [communityId], references: [id])
  communityId String?
}

model Comment {
  id          String   @id @default(cuid()) @map("_id")
 
  user        User     @relation(fields: [userEmail], references: [email])
  time        DateTime @default(now())
  details        String
  

  Post   Post?   @relation(fields: [postId], references: [id])
  postId String?
  userEmail String
}